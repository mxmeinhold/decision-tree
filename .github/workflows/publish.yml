name: Pypi publishing

on:
  push:
    tags:
      - v*

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.10.0-alpha.6']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with pylint
        run: |
          pylint decision_tree

  typecheck:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.10.0-alpha.6']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Typecheck with mypy
        run: |
          mypy decision_tree

  build:
    runs-on: ubuntu-latest

    needs:
      - lint
      - typecheck

    strategy:
      matrix:
        python-version: ['3.10.0-alpha.6']

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run build
        run: |
          make build

      - name: Upload built artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.python-version }}-dist
          path: dist/*
  
  publish-test:
    runs-on: ubuntu-latest
    environment: Test Pypi

    needs:
      - build

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

  publish-prod:
    runs-on: ubuntu-latest
    environment: Prod Pypi

    needs:
      - build
      - publish-test

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
